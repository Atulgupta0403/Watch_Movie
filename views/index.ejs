<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Video Chunk Upload</title>
    <style>
        #progressBar {
            width: 0%;
            background-color: green;
            height: 20px;
            transition: width 0.3s ease;
        }
    </style>
</head>
<body>
    <h1>Video Chunk Upload</h1>
    <input type="file" id="videoInput" accept="video/*">
    <div id="progress" style="width: 100%; border: 1px solid #000;">
        <div id="progressBar"></div>
    </div>
    <span id="progressText">0%</span>

    <script>
        document.querySelector('#videoInput').addEventListener('change', handleFileUpload);
        function handleFileUpload(event) {
            const file = event.target.files[0];
            if (!file) return;

            if (!file.type.startsWith('video/')) {
                alert('Please upload a valid video file.');
                return;
            }

            const chunkSize = 1024 * 1024 * 1; // 5MB chunks
            const totalChunks = Math.ceil(file.size / chunkSize);
            const sessionId = Date.now().toString();

            const progressBar = document.getElementById('progressBar');
            const progressText = document.getElementById('progressText');

            async function uploadChunk(chunk, currentChunk) {
                const formData = new FormData();
                formData.append('chunk', chunk, file.name);
                formData.append('filename', file.name);
                formData.append('totalChunks', totalChunks);
                formData.append('currentChunk', currentChunk);
                formData.append('sessionId', sessionId);

                try {
                    const response = await fetch('/upload-chunk', {
                        method: 'POST',
                        body: formData
                    });

                    const result = await response.json();
                    const progress = (currentChunk / totalChunks) * 100;

                    progressBar.style.width = `${progress}%`;
                    progressText.textContent = `${Math.round(progress)}%`;

                    if (result.status === 'complete' && currentChunk === totalChunks) {
                        alert('Video uploaded successfully!');
                    }
                } catch (error) {
                    console.error('Upload error:', error);
                }
            }

            async function uploadAllChunks() {
                for (let chunk = 1; chunk <= totalChunks; chunk++) {
                    const start = (chunk - 1) * chunkSize;
                    const end = Math.min(start + chunkSize, file.size);
                    const chunkBlob = file.slice(start, end);
                    await uploadChunk(chunkBlob, chunk);
                }
            }

            uploadAllChunks();
        }
    </script>
</body>
</html>
